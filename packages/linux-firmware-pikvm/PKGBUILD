# Maintainer: Thomas BÃ¤chler <thomas@archlinux.org>

pkgbase=linux-firmware
pkgname=(linux-firmware-pikvm amd-ucode-pikvm)
_tag=20211027
pkgver=20211027.1d00989
pkgrel=1
pkgdesc="Firmware files for Linux"
url="https://git.kernel.org/?p=linux/kernel/git/firmware/linux-firmware.git;a=summary"
license=('GPL2' 'GPL3' 'custom')
arch=('any')
makedepends=('git')
options=(!strip)
source=("git+https://git.kernel.org/pub/scm/linux/kernel/git/firmware/linux-firmware.git#tag=${_tag}")
sha256sums=('SKIP')

_backports=(
)

prepare() {
  cd ${pkgbase}

  local _c
  for _c in "${_backports[@]}"; do
    git log --oneline -1 "${_c}"
    git cherry-pick -n "${_c}"
  done
}

build() {
  mkdir -p kernel/x86/microcode
  cat ${pkgbase}/amd-ucode/microcode_amd*.bin > kernel/x86/microcode/AuthenticAMD.bin

  # Reproducibility: set the timestamp on the bin file
  if [[ -n ${SOURCE_DATE_EPOCH} ]]; then 
    touch -d @${SOURCE_DATE_EPOCH} kernel/x86/microcode/AuthenticAMD.bin
  fi

  # Reproducibility: strip the inode and device numbers from the cpio archive
  echo kernel/x86/microcode/AuthenticAMD.bin |
    bsdtar --uid 0 --gid 0 -cnf - -T - |
    bsdtar --null -cf - --format=newc @- > amd-ucode.img
}

package_linux-firmware-pikvm() {
  conflicts=(linux-firmware)
  provides=("linux-firmware=$pkgver")

  cd ${pkgbase}

  make DESTDIR="${pkgdir}" FIRMWAREDIR=/usr/lib/firmware install

  # Trigger a microcode reload for configurations not using early updates
  echo 'w /sys/devices/system/cpu/microcode/reload - - - - 1' |
    install -Dm644 /dev/stdin "${pkgdir}/usr/lib/tmpfiles.d/linux-firmware.conf"

  install -Dt "${pkgdir}/usr/share/licenses/linux-firmware" -m644 LICEN* WHENCE
}

package_amd-ucode-pikvm() {
  conflicts=(amd-ucode)
  provides=("amd-ucode=$pkgver")

  pkgdesc="Microcode update image for AMD CPUs"
  license=(custom)

  install -Dt "${pkgdir}/boot" -m644 amd-ucode.img

  install -Dt "${pkgdir}/usr/share/licenses/amd-ucode" -m644 ${pkgbase}/LICENSE.amd-ucode
}

# vim:set sw=2 et:
